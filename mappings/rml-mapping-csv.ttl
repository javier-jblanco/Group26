@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
#@prefix transit: <http://vocab.org/transit/terms/>.
#@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
#@prefix wgs84_pos: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix ex: <http://example.org#> .  
@base <http://example.com/ns#> .

<#TriplesMap1> a rr:TriplesMap;
#<#TriplesMap1>
  rml:logicalSource [
    rml:source "./data/AirQuality-updated.csv" ;
    rml:referenceFormulation ql:CSV 
  ];

  rr:subjectMap [
    rr:template "http://www.group26.org/AP/Station/{EOI_Code}";
    rr:termType rr:IRI; rr:class ex:Station.
    rr:template "http://www.group26.org/AP/Location/{Georreference}";
    rr:termType rr:IRI; rr:class ex:Location.
    rr:template "http://www.group26.org/AP/Measurement/{Pollutant_Name}-{Date}"; 
    rr:termType rr:IRI; rr:class ex:Measurement.
  ];

  #Station_Name
  rr:predicateObjectMap [
    rr:predicate [ rr:constant ex:hasName; rr:tempType rr:IRI ];
    #rr:predicate ex:hasName;
    rr:objectMap [
      rml:reference "Station_Name";  rr:tempType rr:Literal
    ]
  ];

  #hasAltitude
  rr:predicateObjectMap [
    rr:predicate ex:hasAltitude ;
    rr:objectMap [
      rml:reference "Altitude";  rr:datatype <http://www.w3.org/2001/XMLSchema#float>
    ]
  ];

  #hasLatitude
  rr:predicateObjectMap [
    rr:predicate ex:hasLatitude ;
    rr:objectMap [
      rml:reference "Latitude";  rr:datatype <http://www.w3.org/2001/XMLSchema#float>
    ]
  ];  

  #hasLongitude
  rr:predicateObjectMap [
    rr:predicate ex:hasLongitude ;
    rr:objectMap [
      rml:reference "Longitude";  rr:datatype <http://www.w3.org/2001/XMLSchema#float>
    ]
  ];
  
  #hasEnvironment
  rr:predicateObjectMap [
    rr:predicate [ rr:constant ex:hasEnvironment; rr:tempType rr:IRI ];
    #rr:predicate ex:hasEnvironment;
    rr:objectMap [
      rml:reference "Station_Environment";  rr:tempType rr:Literal
    ]
  ];  

  #hasINECode
  rr:predicateObjectMap [
    rr:predicate [ rr:constant ex:hasINECode; rr:tempType rr:IRI ];
    rr:objectMap [
      rml:reference "INE_Code";  rr:tempType rr:Literal
    ]
  ];  


  #hasName
  rr:predicateObjectMap [
    rr:predicate [ rr:constant ex:hasName; rr:tempType rr:IRI ];
    rr:objectMap [
      rml:reference "Station_Name";  rr:tempType rr:Literal
    ]
  ]; 

  #hasType
  rr:predicateObjectMap [
    rr:predicate [ rr:constant ex:hasType; rr:tempType rr:IRI ];
    rr:objectMap [
      rml:reference "Station_Type";  rr:tempType rr:Literal
    ]
  ]; 

  #hasUnits
  rr:predicateObjectMap [
    rr:predicate [ rr:constant ex:hasUnits; rr:tempType rr:IRI ];
    rr:objectMap [
      rml:reference "Units";  rr:tempType rr:Literal
    ]
  ]; 

  #hasValue
  rr:predicateObjectMap [
    rr:predicate ex:hasValue ;
    rr:objectMap [
      rml:reference "Values";  rr:datatype <http://www.w3.org/2001/XMLSchema#float>
    ]
  ];  

  #inDate
  rr:predicateObjectMap [
    rr:predicate ex:inDate ;
    rr:objectMap [
      rml:reference "Date";  rr:datatype <http://www.w3.org/2001/XMLSchema#dateTime>
    ]
  ];

  #inMunicipality
  rr:predicateObjectMap [
    rr:predicate [ rr:constant ex:inMunicipality; rr:tempType rr:IRI ];
    rr:objectMap [
      rml:reference "Municipality";  rr:tempType rr:Literal
    ]
  ]; 

  #measuredPollutant
  rr:predicateObjectMap [
    rr:predicate ex:measuredPollutant ;
    rr:objectMap [
      rml:reference "Pollutant_Code";  rr:datatype <http://www.w3.org/2001/XMLSchema#integer>
    ]
  ]; 
  
  #pollutantName
  rr:predicateObjectMap [
    rr:predicate [ rr:constant ex:pollutantName; rr:tempType rr:IRI ];
    rr:objectMap [
      rml:reference "Pollutant_Name";  rr:tempType rr:Literal
    ]
  ].

 #Georeference   
